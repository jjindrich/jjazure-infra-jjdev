{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationGatewayName": {
            "defaultValue": "jjappgw",
            "type": "String"
        },
        "availabilityZones": {
            "type": "array",
            "defaultValue": [
                "1",
                "2",
                "3"
            ],
            "metadata": {
                "description": "Zone numbers e.g. 1,2,3."
            }
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "publicIpAddress": {
            "type": "string"
        },
        "publicIpPrefix": {
            "type": "string"
        },
        "identityId": {
            "type": "string"
        },
        "identityPrincipalId": {
            "type": "string"
        },
        "identityClientId": {
            "type": "string"
        },
        "certificateSecretId": {
            "type": "string"
        }
    },
    "variables": {
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "publicIpPrefixId": "[resourceId('Microsoft.Network/publicIPPrefixes', parameters('publicIpPrefix'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIpAddress')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('applicationGatewayName')]"
                },
                "ipTags": [
                ],
                "publicIPPrefix": {
                    "id": "[variables('publicIpPrefixId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-09-01",
            "name": "[parameters('applicationGatewayName')]",
            "location": "[resourceGroup().location]",
            "zones": "[if(equals(length(parameters('availabilityZones')), 0), json('null'), parameters('availabilityZones'))]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[concat(subscription().id,parameters('identityId'))]": {
                        "principalId": "[parameters('identityPrincipalId')]",
                        "clientId": "[parameters('identityClientId')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddress'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[concat(variables('vnetId'), '/subnets/',parameters('subnetName'))]"
                            }
                        }
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "listen-public-sslvaultCert",
                        "properties": {
                            "keyVaultSecretId": "[parameters('certificateSecretId')]"
                        }
                    }
                ],
                "trustedRootCertificates": [
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddress'))]"
                            }
                        }
                    },
                    {
                        "name": "appGwPrivateFrontendIp",
                        "properties": {
                            "privateIPAddress": "10.3.253.10",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(variables('vnetId'), '/subnets/',parameters('subnetName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    },
                    {
                        "name": "port_8080",
                        "properties": {
                            "port": 8080
                        }
                    },
                    {
                        "name": "port_443",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "jjdevs1server",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.1.0.10"
                                }
                            ]
                        }
                    },
                    {
                        "name": "jjdevv2addc",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.3.250.10"
                                }
                            ]
                        }
                    },
                    {
                        "name": "jjaks",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.4.2.250"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "http-setting",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "listen-public",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostNames": [
                            ],
                            "requireServerNameIndication": false
                        }
                    },
                    {
                        "name": "listen-private",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGwPrivateFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/port_8080')]"
                            },
                            "protocol": "Http",
                            "hostNames": [
                            ],
                            "requireServerNameIndication": false
                        }
                    },
                    {
                        "name": "listen-public-ssl",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/sslCertificates/listen-public-sslvaultCert')]"
                            },
                            "hostNames": [
                            ],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [
                ],
                "requestRoutingRules": [
                    {
                        "name": "public-routeall",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/listen-public-ssl')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/jjaks')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/http-setting')]"
                            }
                        }
                    },
                    {
                        "name": "private-routeall",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/listen-private')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/jjdevs1server')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/http-setting')]"
                            }
                        }
                    }
                ],
                "probes": [
                ],
                "rewriteRuleSets": [
                    {
                        "name": "RemoveSever",
                        "properties": {
                            "rewriteRules": [
                                {
                                    "ruleSequence": 100,
                                    "conditions": [
                                    ],
                                    "name": "NewRewrite",
                                    "actionSet": {
                                        "requestHeaderConfigurations": [
                                        ],
                                        "responseHeaderConfigurations": [
                                            {
                                                "headerName": "Server"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "redirectConfigurations": [
                ],
                "enableHttp2": false,
                "autoscaleConfiguration": {
                    "minCapacity": 0,
                    "maxCapacity": 2
                }
            }
        },
        {
            "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('applicationGatewayName'),'-policy')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "customRules": [
                    {
                        "name": "denyQueryString",
                        "priority": 1,
                        "ruleType": "MatchRule",
                        "action": "Block",
                        "matchConditions": [
                            {
                                "matchVariables": [
                                    {
                                        "variableName": "QueryString"
                                    }
                                ],
                                "operator": "Contains",
                                "negationConditon": false,
                                "matchValues": [
                                    "deny"
                                ],
                                "transforms": [
                                    "Lowercase"
                                ]
                            }
                        ]
                    }
                ],
                "policySettings": {
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100,
                    "state": "Enabled",
                    "mode": "Prevention"
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.0",
                            "ruleGroupOverrides": [
                            ]
                        }
                    ],
                    "exclusions": [
                    ]
                }
            }
        }
    ]
}