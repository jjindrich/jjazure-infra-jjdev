name: $(date:yyyyMMdd)$(rev:.r)

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

parameters:
- name: DeployApiMngmt
  displayName: "Deploy API management"
  default: false
  type: boolean

variables:
  subscription: 'JJ Microsoft Azure Internal Consumption (82fb79bf-ee69-4a57-a76c-26153e544afe)'
  
stages:
- stage: 'Deploy'
  displayName: 'Deploy'
  jobs:
  - job: 'DeployVnet'
    displayName: 'Deploy virtual network'    
    steps:
    - script: chmod +x vnet/*.sh
    - task: AzureCLI@2
      displayName: 'Vnet deploy'      
      inputs:
        azureSubscription: $(subscription)
        scriptType: bash
        scriptLocation: 'inlineScript'
        inlineScript: './deploy.sh'
        workingDirectory: 'vnet'
  - job: 'DeployFw'
    displayName: 'Deploy firewall'    
    dependsOn: 'DeployVnet'
    steps:
    - script: chmod +x fw/*.sh
    - task: AzureCLI@2
      displayName: 'Fw deploy'      
      inputs:
        azureSubscription: $(subscription)
        scriptType: bash
        scriptLocation: 'inlineScript'
        inlineScript: './deploy.sh'
        workingDirectory: 'fw'
  - job: 'DeployAppGw'
    displayName: 'Deploy application gateway'
    dependsOn: 'DeployVnet'
    steps:
    - script: chmod +x appgw/*.sh
    - task: AzureCLI@2
      displayName: 'AppGw deploy'      
      inputs:
        azureSubscription: $(subscription)
        scriptType: bash
        scriptLocation: 'inlineScript'
        inlineScript: './deploy.sh'
        workingDirectory: 'appgw'
  - job: 'DeployApiMngmt'
    displayName: 'Deploy API management'
    dependsOn: 'DeployApi'
    condition: and(succeeded(), eq('${{ parameters.DeployApiMngmt }}', true))
    steps:
    - script: chmod +x apimngmt/*.sh
    - task: AzureCLI@2
      displayName: 'API management deploy'      
      inputs:
        azureSubscription: $(subscription)
        scriptType: bash
        scriptLocation: 'inlineScript'
        inlineScript: './deploy.sh'
        workingDirectory: 'apimngmt'
    